{
  "version": 3,
  "sources": ["../../../../../node_modules/openai/version.mjs", "../../../../../node_modules/openai/_shims/registry.mjs", "../../../../../node_modules/openai/_shims/MultipartBody.mjs", "../../../../../node_modules/openai/_shims/web-runtime.mjs", "../../../../../node_modules/openai/_shims/index.mjs", "../../../../../node_modules/openai/error.mjs", "../../../../../node_modules/openai/streaming.mjs", "../../../../../node_modules/openai/uploads.mjs", "../../../../../node_modules/openai/core.mjs", "../../../../../node_modules/openai/pagination.mjs", "../../../../../node_modules/openai/resource.mjs", "../../../../../node_modules/openai/resources/chat/completions.mjs", "../../../../../node_modules/openai/resources/chat/chat.mjs", "../../../../../node_modules/openai/resources/audio/speech.mjs", "../../../../../node_modules/openai/resources/audio/transcriptions.mjs", "../../../../../node_modules/openai/resources/audio/translations.mjs", "../../../../../node_modules/openai/resources/audio/audio.mjs", "../../../../../node_modules/openai/resources/batches.mjs", "../../../../../node_modules/openai/resources/beta/assistants/files.mjs", "../../../../../node_modules/openai/resources/beta/assistants/assistants.mjs", "../../../../../node_modules/openai/lib/RunnableFunction.mjs", "../../../../../node_modules/openai/lib/chatCompletionUtils.mjs", "../../../../../node_modules/openai/lib/AbstractChatCompletionRunner.mjs", "../../../../../node_modules/openai/lib/ChatCompletionRunner.mjs", "../../../../../node_modules/openai/lib/ChatCompletionStream.mjs", "../../../../../node_modules/openai/lib/ChatCompletionStreamingRunner.mjs", "../../../../../node_modules/openai/resources/beta/chat/completions.mjs", "../../../../../node_modules/openai/resources/beta/chat/chat.mjs", "../../../../../node_modules/openai/lib/AbstractAssistantStreamRunner.mjs", "../../../../../node_modules/openai/lib/AssistantStream.mjs", "../../../../../node_modules/openai/resources/beta/threads/messages/files.mjs", "../../../../../node_modules/openai/resources/beta/threads/messages/messages.mjs", "../../../../../node_modules/openai/resources/beta/threads/runs/steps.mjs", "../../../../../node_modules/openai/resources/beta/threads/runs/runs.mjs", "../../../../../node_modules/openai/resources/beta/threads/threads.mjs", "../../../../../node_modules/openai/resources/beta/beta.mjs", "../../../../../node_modules/openai/resources/completions.mjs", "../../../../../node_modules/openai/resources/embeddings.mjs", "../../../../../node_modules/openai/resources/files.mjs", "../../../../../node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs", "../../../../../node_modules/openai/resources/fine-tuning/jobs/jobs.mjs", "../../../../../node_modules/openai/resources/fine-tuning/fine-tuning.mjs", "../../../../../node_modules/openai/resources/images.mjs", "../../../../../node_modules/openai/resources/models.mjs", "../../../../../node_modules/openai/resources/moderations.mjs", "../../../../../node_modules/openai/index.mjs"],
  "sourcesContent": ["export const VERSION = '4.36.0'; // x-release-please-version\n", "export let auto = false;\nexport let kind = undefined;\nexport let fetch = undefined;\nexport let Request = undefined;\nexport let Response = undefined;\nexport let Headers = undefined;\nexport let FormData = undefined;\nexport let Blob = undefined;\nexport let File = undefined;\nexport let ReadableStream = undefined;\nexport let getMultipartRequestOptions = undefined;\nexport let getDefaultAgent = undefined;\nexport let fileFromPath = undefined;\nexport let isFsReadStream = undefined;\nexport function setShims(shims, options = { auto: false }) {\n    if (auto) {\n        throw new Error(`you must \\`import 'openai/shims/${shims.kind}'\\` before importing anything else from openai`);\n    }\n    if (kind) {\n        throw new Error(`can't \\`import 'openai/shims/${shims.kind}'\\` after \\`import 'openai/shims/${kind}'\\``);\n    }\n    auto = options.auto;\n    kind = shims.kind;\n    fetch = shims.fetch;\n    Request = shims.Request;\n    Response = shims.Response;\n    Headers = shims.Headers;\n    FormData = shims.FormData;\n    Blob = shims.Blob;\n    File = shims.File;\n    ReadableStream = shims.ReadableStream;\n    getMultipartRequestOptions = shims.getMultipartRequestOptions;\n    getDefaultAgent = shims.getDefaultAgent;\n    fileFromPath = shims.fileFromPath;\n    isFsReadStream = shims.isFsReadStream;\n}\n", "/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport class MultipartBody {\n    constructor(body) {\n        this.body = body;\n    }\n    get [Symbol.toStringTag]() {\n        return 'MultipartBody';\n    }\n}\n", "import { MultipartBody } from \"./MultipartBody.mjs\";\nexport function getRuntime({ manuallyImported } = {}) {\n    const recommendation = manuallyImported ?\n        `You may need to use polyfills`\n        : `Add one of these imports before your first \\`import â€¦ from 'openai'\\`:\n- \\`import 'openai/shims/node'\\` (if you're running on Node)\n- \\`import 'openai/shims/web'\\` (otherwise)\n`;\n    let _fetch, _Request, _Response, _Headers;\n    try {\n        // @ts-ignore\n        _fetch = fetch;\n        // @ts-ignore\n        _Request = Request;\n        // @ts-ignore\n        _Response = Response;\n        // @ts-ignore\n        _Headers = Headers;\n    }\n    catch (error) {\n        throw new Error(`this environment is missing the following Web Fetch API type: ${error.message}. ${recommendation}`);\n    }\n    return {\n        kind: 'web',\n        fetch: _fetch,\n        Request: _Request,\n        Response: _Response,\n        Headers: _Headers,\n        FormData: \n        // @ts-ignore\n        typeof FormData !== 'undefined' ? FormData : (class FormData {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'FormData' is undefined. ${recommendation}`);\n            }\n        }),\n        Blob: typeof Blob !== 'undefined' ? Blob : (class Blob {\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'Blob' is undefined. ${recommendation}`);\n            }\n        }),\n        File: \n        // @ts-ignore\n        typeof File !== 'undefined' ? File : (class File {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'File' is undefined. ${recommendation}`);\n            }\n        }),\n        ReadableStream: \n        // @ts-ignore\n        typeof ReadableStream !== 'undefined' ? ReadableStream : (class ReadableStream {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${recommendation}`);\n            }\n        }),\n        getMultipartRequestOptions: async (\n        // @ts-ignore\n        form, opts) => ({\n            ...opts,\n            body: new MultipartBody(form),\n        }),\n        getDefaultAgent: (url) => undefined,\n        fileFromPath: () => {\n            throw new Error('The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/openai/openai-node#file-uploads');\n        },\n        isFsReadStream: (value) => false,\n    };\n}\n", "/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport * as shims from './registry.mjs';\nimport * as auto from 'openai/_shims/auto/runtime';\nif (!shims.kind) shims.setShims(auto.getRuntime(), { auto: true });\nexport * from './registry.mjs';\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"./core.mjs\";\nexport class OpenAIError extends Error {\n}\nexport class APIError extends OpenAIError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.request_id = headers?.['x-request-id'];\n        const data = error;\n        this.error = data;\n        this.code = data?.['code'];\n        this.param = data?.['param'];\n        this.type = data?.['type'];\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ?\n                error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status) {\n            return new APIConnectionError({ cause: castToError(errorResponse) });\n        }\n        const error = errorResponse?.['error'];\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nexport class APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n        this.status = undefined;\n    }\n}\nexport class APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        this.status = undefined;\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nexport class BadRequestError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 400;\n    }\n}\nexport class AuthenticationError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 401;\n    }\n}\nexport class PermissionDeniedError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 403;\n    }\n}\nexport class NotFoundError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 404;\n    }\n}\nexport class ConflictError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 409;\n    }\n}\nexport class UnprocessableEntityError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 422;\n    }\n}\nexport class RateLimitError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 429;\n    }\n}\nexport class InternalServerError extends APIError {\n}\n", "import { ReadableStream } from \"./_shims/index.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { APIError } from 'openai/error';\nexport class Stream {\n    constructor(iterator, controller) {\n        this.iterator = iterator;\n        this.controller = controller;\n    }\n    static fromSSEResponse(response, controller) {\n        let consumed = false;\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of _iterSSEMessages(response, controller)) {\n                    if (done)\n                        continue;\n                    if (sse.data.startsWith('[DONE]')) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null) {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new APIError(undefined, data.error, undefined, undefined);\n                        }\n                        yield data;\n                    }\n                    else {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        // TODO: Is this where the error should be thrown?\n                        if (sse.event == 'error') {\n                            throw new APIError(undefined, data.error, data.message, undefined);\n                        }\n                        yield { event: sse.event, data: data };\n                    }\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */\n    static fromReadableStream(readableStream, controller) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new LineDecoder();\n            const iter = readableStreamAsyncIterable(readableStream);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()) {\n                    if (done)\n                        continue;\n                    if (line)\n                        yield JSON.parse(line);\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */\n    tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue) => {\n            return {\n                next: () => {\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                },\n            };\n        };\n        return [\n            new Stream(() => teeIterator(left), this.controller),\n            new Stream(() => teeIterator(right), this.controller),\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */\n    toReadableStream() {\n        const self = this;\n        let iter;\n        const encoder = new TextEncoder();\n        return new ReadableStream({\n            async start() {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull(ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done)\n                        return ctrl.close();\n                    const bytes = encoder.encode(JSON.stringify(value) + '\\n');\n                    ctrl.enqueue(bytes);\n                }\n                catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel() {\n                await iter.return?.();\n            },\n        });\n    }\n}\nexport async function* _iterSSEMessages(response, controller) {\n    if (!response.body) {\n        controller.abort();\n        throw new OpenAIError(`Attempted to iterate over a response with no body`);\n    }\n    const sseDecoder = new SSEDecoder();\n    const lineDecoder = new LineDecoder();\n    const iter = readableStreamAsyncIterable(response.body);\n    for await (const sseChunk of iterSSEChunks(iter)) {\n        for (const line of lineDecoder.decode(sseChunk)) {\n            const sse = sseDecoder.decode(line);\n            if (sse)\n                yield sse;\n        }\n    }\n    for (const line of lineDecoder.flush()) {\n        const sse = sseDecoder.decode(line);\n        if (sse)\n            yield sse;\n    }\n}\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator) {\n    let data = new Uint8Array();\n    for await (const chunk of iterator) {\n        if (chunk == null) {\n            continue;\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? new TextEncoder().encode(chunk)\n                : chunk;\n        let newData = new Uint8Array(data.length + binaryChunk.length);\n        newData.set(data);\n        newData.set(binaryChunk, data.length);\n        data = newData;\n        let patternIndex;\n        while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n            yield data.slice(0, patternIndex);\n            data = data.slice(patternIndex);\n        }\n    }\n    if (data.length > 0) {\n        yield data;\n    }\n}\nfunction findDoubleNewlineIndex(buffer) {\n    // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n    // and returns the index right after the first occurrence of any pattern,\n    // or -1 if none of the patterns are found.\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = 0; i < buffer.length - 2; i++) {\n        if (buffer[i] === newline && buffer[i + 1] === newline) {\n            // \\n\\n\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n            // \\r\\r\n            return i + 2;\n        }\n        if (buffer[i] === carriage &&\n            buffer[i + 1] === newline &&\n            i + 3 < buffer.length &&\n            buffer[i + 2] === carriage &&\n            buffer[i + 3] === newline) {\n            // \\r\\n\\r\\n\n            return i + 4;\n        }\n    }\n    return -1;\n}\nclass SSEDecoder {\n    constructor() {\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith('\\r')) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length)\n                return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join('\\n'),\n                raw: this.chunks,\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(':')) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, ':');\n        if (value.startsWith(' ')) {\n            value = value.substring(1);\n        }\n        if (fieldname === 'event') {\n            this.event = value;\n        }\n        else if (fieldname === 'data') {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nclass LineDecoder {\n    constructor() {\n        this.buffer = [];\n        this.trailingCR = false;\n    }\n    decode(chunk) {\n        let text = this.decodeText(chunk);\n        if (this.trailingCR) {\n            text = '\\r' + text;\n            this.trailingCR = false;\n        }\n        if (text.endsWith('\\r')) {\n            this.trailingCR = true;\n            text = text.slice(0, -1);\n        }\n        if (!text) {\n            return [];\n        }\n        const trailingNewline = LineDecoder.NEWLINE_CHARS.has(text[text.length - 1] || '');\n        let lines = text.split(LineDecoder.NEWLINE_REGEXP);\n        // if there is a trailing new line then the last entry will be an empty\n        // string which we don't care about\n        if (trailingNewline) {\n            lines.pop();\n        }\n        if (lines.length === 1 && !trailingNewline) {\n            this.buffer.push(lines[0]);\n            return [];\n        }\n        if (this.buffer.length > 0) {\n            lines = [this.buffer.join('') + lines[0], ...lines.slice(1)];\n            this.buffer = [];\n        }\n        if (!trailingNewline) {\n            this.buffer = [lines.pop() || ''];\n        }\n        return lines;\n    }\n    decodeText(bytes) {\n        if (bytes == null)\n            return '';\n        if (typeof bytes === 'string')\n            return bytes;\n        // Node:\n        if (typeof Buffer !== 'undefined') {\n            if (bytes instanceof Buffer) {\n                return bytes.toString();\n            }\n            if (bytes instanceof Uint8Array) {\n                return Buffer.from(bytes).toString();\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`);\n        }\n        // Browser\n        if (typeof TextDecoder !== 'undefined') {\n            if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\n                this.textDecoder ?? (this.textDecoder = new TextDecoder('utf8'));\n                return this.textDecoder.decode(bytes);\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array/ArrayBuffer (${bytes.constructor.name}) in a web platform. Please report this error.`);\n        }\n        throw new OpenAIError(`Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`);\n    }\n    flush() {\n        if (!this.buffer.length && !this.trailingCR) {\n            return [];\n        }\n        const lines = [this.buffer.join('')];\n        this.buffer = [];\n        this.trailingCR = false;\n        return lines;\n    }\n}\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n/** This is an internal helper function that's just used for testing */\nexport function _decodeChunks(chunks) {\n    const decoder = new LineDecoder();\n    const lines = [];\n    for (const chunk of chunks) {\n        lines.push(...decoder.decode(chunk));\n    }\n    return lines;\n}\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n    }\n    return [str, '', ''];\n}\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function readableStreamAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator])\n        return stream;\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result?.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n", "import { FormData, File, getMultipartRequestOptions, isFsReadStream, } from \"./_shims/index.mjs\";\nexport { fileFromPath } from \"./_shims/index.mjs\";\nexport const isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\nexport const isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\nexport const isUploadable = (value) => {\n    return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options) {\n    // If it's a promise, resolve it.\n    value = await value;\n    // Use the file's options if there isn't one provided\n    options ?? (options = isFileLike(value) ? { lastModified: value.lastModified, type: value.type } : {});\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file');\n        return new File([blob], name, options);\n    }\n    const bits = await getBytes(value);\n    name || (name = getName(value) ?? 'unknown_file');\n    if (!options.type) {\n        const type = bits[0]?.type;\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return new File(bits, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(await value.arrayBuffer());\n    }\n    else if (isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(chunk); // TODO, consider validating?\n        }\n    }\n    else {\n        throw new Error(`Unexpected data type: ${typeof value}; constructor: ${value?.constructor\n            ?.name}; props: ${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    const props = Object.getOwnPropertyNames(value);\n    return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\nfunction getName(value) {\n    return (getStringFromMaybeBuffer(value.name) ||\n        getStringFromMaybeBuffer(value.filename) ||\n        // For fs.ReadStream\n        getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop());\n}\nconst getStringFromMaybeBuffer = (x) => {\n    if (typeof x === 'string')\n        return x;\n    if (typeof Buffer !== 'undefined' && x instanceof Buffer)\n        return String(x);\n    return undefined;\n};\nconst isAsyncIterableIterator = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\nexport const isMultipartBody = (body) => body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const multipartFormRequestOptions = async (opts) => {\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const createForm = async (body) => {\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (isUploadable(value)) {\n        const file = await toFile(value);\n        form.append(key, file);\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./streaming.mjs\";\nimport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch, } from \"./_shims/index.mjs\";\nimport { isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm, } from \"./uploads.mjs\";\nasync function defaultParseResponse(props) {\n    const { response } = props;\n    if (props.options.stream) {\n        debug('response', response.status, response.url, response.headers, response.body);\n        // Note: there is an invariant here that isn't represented in the type system\n        // that if you set `stream: true` the response type must also be `Stream<T>`\n        if (props.options.__streamClass) {\n            return props.options.__streamClass.fromSSEResponse(response, props.controller);\n        }\n        return Stream.fromSSEResponse(response, props.controller);\n    }\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n        return null;\n    }\n    if (props.options.__binaryResponse) {\n        return response;\n    }\n    const contentType = response.headers.get('content-type');\n    const isJSON = contentType?.includes('application/json') || contentType?.includes('application/vnd.api+json');\n    if (isJSON) {\n        const json = await response.json();\n        debug('response', response.status, response.url, response.headers, json);\n        return json;\n    }\n    const text = await response.text();\n    debug('response', response.status, response.url, response.headers, text);\n    // TODO handle blob, arraybuffer, other content types, etc.\n    return text;\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(this.responsePromise, async (props) => transform(await this.parseResponse(props)));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import â€¦ from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data and the raw `Response` instance.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     *\n     * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import â€¦ from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then(this.parseResponse);\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\nexport class APIClient {\n    constructor({ baseURL, maxRetries = 2, timeout = 600000, // 10 minutes\n    httpAgent, fetch: overridenFetch, }) {\n        this.baseURL = baseURL;\n        this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n        this.timeout = validatePositiveInteger('timeout', timeout);\n        this.httpAgent = httpAgent;\n        this.fetch = overridenFetch ?? fetch;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n    defaultHeaders(opts) {\n        return {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'User-Agent': this.getUserAgent(),\n            ...getPlatformHeaders(),\n            ...this.authHeaders(opts),\n        };\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n    validateHeaders(headers, customHeaders) { }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then((opts) => ({ method, path, ...opts })));\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    calculateContentLength(body) {\n        if (typeof body === 'string') {\n            if (typeof Buffer !== 'undefined') {\n                return Buffer.byteLength(body, 'utf8').toString();\n            }\n            if (typeof TextEncoder !== 'undefined') {\n                const encoder = new TextEncoder();\n                const encoded = encoder.encode(body);\n                return encoded.length.toString();\n            }\n        }\n        return null;\n    }\n    buildRequest(options) {\n        const { method, path, query, headers: headers = {} } = options;\n        const body = isMultipartBody(options.body) ? options.body.body\n            : options.body ? JSON.stringify(options.body, null, 2)\n                : null;\n        const contentLength = this.calculateContentLength(body);\n        const url = this.buildURL(path, query);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        const timeout = options.timeout ?? this.timeout;\n        const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n        const minAgentTimeout = timeout + 1000;\n        if (typeof httpAgent?.options?.timeout === 'number' &&\n            minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n            // Allow any given request to bump our agent active socket timeout.\n            // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n            // and without mutating agent we would need to create more of them.\n            // This tradeoff optimizes for performance.\n            httpAgent.options.timeout = minAgentTimeout;\n        }\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!options.idempotencyKey)\n                options.idempotencyKey = this.defaultIdempotencyKey();\n            headers[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const reqHeaders = this.buildHeaders({ options, headers, contentLength });\n        const req = {\n            method,\n            ...(body && { body: body }),\n            headers: reqHeaders,\n            ...(httpAgent && { agent: httpAgent }),\n            // @ts-ignore node-fetch uses a custom AbortSignal type that is\n            // not compatible with standard web types\n            signal: options.signal ?? null,\n        };\n        return { req, url, timeout };\n    }\n    buildHeaders({ options, headers, contentLength, }) {\n        const reqHeaders = {};\n        if (contentLength) {\n            reqHeaders['content-length'] = contentLength;\n        }\n        const defaultHeaders = this.defaultHeaders(options);\n        applyHeadersMut(reqHeaders, defaultHeaders);\n        applyHeadersMut(reqHeaders, headers);\n        // let builtin fetch set the Content-Type for multipart bodies\n        if (isMultipartBody(options.body) && shimsKind !== 'node') {\n            delete reqHeaders['content-type'];\n        }\n        this.validateHeaders(reqHeaders, headers);\n        return reqHeaders;\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */\n    async prepareOptions(options) { }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    parseHeaders(headers) {\n        return (!headers ? {}\n            : Symbol.iterator in headers ?\n                Object.fromEntries(Array.from(headers).map((header) => [...header]))\n                : { ...headers });\n    }\n    makeStatusError(status, error, message, headers) {\n        return APIError.generate(status, error, message, headers);\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n    async makeRequest(optionsInput, retriesRemaining) {\n        const options = await optionsInput;\n        if (retriesRemaining == null) {\n            retriesRemaining = options.maxRetries ?? this.maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = this.buildRequest(options);\n        await this.prepareRequest(req, { url, options });\n        debug('request', url, options, req.headers);\n        if (options.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        if (response instanceof Error) {\n            if (options.signal?.aborted) {\n                throw new APIUserAbortError();\n            }\n            if (retriesRemaining) {\n                return this.retryRequest(options, retriesRemaining);\n            }\n            if (response.name === 'AbortError') {\n                throw new APIConnectionTimeoutError();\n            }\n            throw new APIConnectionError({ cause: response });\n        }\n        const responseHeaders = createResponseHeaders(response.headers);\n        if (!response.ok) {\n            if (retriesRemaining && this.shouldRetry(response)) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n                return this.retryRequest(options, retriesRemaining, responseHeaders);\n            }\n            const errText = await response.text().catch((e) => castToError(e).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n            debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n            const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n            throw err;\n        }\n        return { response, options, controller };\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null);\n        return new PagePromise(this, request, Page);\n    }\n    buildURL(path, query) {\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (typeof query === 'object' && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    stringifyQuery(query) {\n        return Object.entries(query)\n            .filter(([_, value]) => typeof value !== 'undefined')\n            .map(([key, value]) => {\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n            }\n            if (value === null) {\n                return `${encodeURIComponent(key)}=`;\n            }\n            throw new OpenAIError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n        })\n            .join('&');\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        return (this.getRequestClient()\n            // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n            .fetch.call(undefined, url, { signal: controller.signal, ...options })\n            .finally(() => {\n            clearTimeout(timeout);\n        }));\n    }\n    getRequestClient() {\n        return { fetch: this.fetch };\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.['retry-after'];\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n}\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageInfo() != null;\n    }\n    async getNextPage() {\n        const nextInfo = this.nextPageInfo();\n        if (!nextInfo) {\n            throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        const nextOptions = { ...this.options };\n        if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n            nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n        }\n        else if ('url' in nextInfo) {\n            const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n            for (const [key, value] of params) {\n                nextInfo.url.searchParams.set(key, value);\n            }\n            nextOptions.query = undefined;\n            nextOptions.path = nextInfo.url.toString();\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(request, async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\nexport const createResponseHeaders = (headers) => {\n    return new Proxy(Object.fromEntries(\n    // @ts-ignore\n    headers.entries()), {\n        get(target, name) {\n            const key = name.toString();\n            return target[key.toLowerCase()] || target[key];\n        },\n    });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n    method: true,\n    path: true,\n    query: true,\n    body: true,\n    headers: true,\n    maxRetries: true,\n    stream: true,\n    timeout: true,\n    httpAgent: true,\n    signal: true,\n    idempotencyKey: true,\n    __binaryResponse: true,\n    __streamClass: true,\n};\nexport const isRequestOptions = (obj) => {\n    return (typeof obj === 'object' &&\n        obj !== null &&\n        !isEmptyObj(obj) &&\n        Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k)));\n};\nconst getPlatformProperties = () => {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    // Check if Node.js\n    if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(process.platform),\n            'X-Stainless-Arch': normalizeArch(process.arch),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n// https://stackoverflow.com/a/19709846\nconst startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\nconst isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    return new Error(err);\n};\nexport const ensurePresent = (value) => {\n    if (value == null)\n        throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    return value;\n};\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof process !== 'undefined') {\n        return process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof Deno !== 'undefined') {\n        return Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders, newHeaders) {\n    for (const k in newHeaders) {\n        if (!hasOwn(newHeaders, k))\n            continue;\n        const lowerKey = k.toLowerCase();\n        if (!lowerKey)\n            continue;\n        const val = newHeaders[k];\n        if (val === null) {\n            delete targetHeaders[lowerKey];\n        }\n        else if (val !== undefined) {\n            targetHeaders[lowerKey] = val;\n        }\n    }\n}\nexport function debug(action, ...args) {\n    if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n        console.log(`OpenAI:DEBUG:${action}`, ...args);\n    }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\nexport const isHeadersProtocol = (headers) => {\n    return typeof headers?.get === 'function';\n};\nexport const getRequiredHeader = (headers, header) => {\n    const lowerCasedHeader = header.toLowerCase();\n    if (isHeadersProtocol(headers)) {\n        // to deal with the case where the header looks like Stainless-Event-Id\n        const intercapsHeader = header[0]?.toUpperCase() +\n            header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n        for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n            const value = headers.get(key);\n            if (value) {\n                return value;\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(headers)) {\n        if (key.toLowerCase() === lowerCasedHeader) {\n            if (Array.isArray(value)) {\n                if (value.length <= 1)\n                    return value[0];\n                console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n                return value[0];\n            }\n            return value;\n        }\n    }\n    throw new Error(`Could not find ${header} header`);\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str) => {\n    if (!str)\n        return '';\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str).toString('base64');\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(str);\n    }\n    throw new OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexport function isObj(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { AbstractPage } from \"./core.mjs\";\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class Page extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.object = body.object;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    /**\n     * This page represents a response that isn't actually paginated at the API level\n     * so there will never be any next page params.\n     */\n    nextPageParams() {\n        return null;\n    }\n    nextPageInfo() {\n        return null;\n    }\n}\nexport class CursorPage extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    nextPageParams() {\n        const info = this.nextPageInfo();\n        if (!info)\n            return null;\n        if ('params' in info)\n            return info.params;\n        const params = Object.fromEntries(info.url.searchParams);\n        if (!Object.keys(params).length)\n            return null;\n        return params;\n    }\n    nextPageInfo() {\n        const data = this.getPaginatedItems();\n        if (!data.length) {\n            return null;\n        }\n        const id = data[data.length - 1]?.id;\n        if (!id) {\n            return null;\n        }\n        return { params: { after: id } };\n    }\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport class APIResource {\n    constructor(client) {\n        this._client = client;\n    }\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/chat/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n(function (Completions) {\n})(Completions || (Completions = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport * as CompletionsAPI from 'openai/resources/chat/completions';\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\n(function (Chat) {\n    Chat.Completions = CompletionsAPI.Completions;\n})(Chat || (Chat = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nexport class Speech extends APIResource {\n    /**\n     * Generates audio from the input text.\n     */\n    create(body, options) {\n        return this._client.post('/audio/speech', { body, ...options, __binaryResponse: true });\n    }\n}\n(function (Speech) {\n})(Speech || (Speech = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport { multipartFormRequestOptions } from 'openai/core';\nexport class Transcriptions extends APIResource {\n    /**\n     * Transcribes audio into the input language.\n     */\n    create(body, options) {\n        return this._client.post('/audio/transcriptions', multipartFormRequestOptions({ body, ...options }));\n    }\n}\n(function (Transcriptions) {\n})(Transcriptions || (Transcriptions = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport { multipartFormRequestOptions } from 'openai/core';\nexport class Translations extends APIResource {\n    /**\n     * Translates audio into English.\n     */\n    create(body, options) {\n        return this._client.post('/audio/translations', multipartFormRequestOptions({ body, ...options }));\n    }\n}\n(function (Translations) {\n})(Translations || (Translations = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport * as SpeechAPI from 'openai/resources/audio/speech';\nimport * as TranscriptionsAPI from 'openai/resources/audio/transcriptions';\nimport * as TranslationsAPI from 'openai/resources/audio/translations';\nexport class Audio extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n        this.translations = new TranslationsAPI.Translations(this._client);\n        this.speech = new SpeechAPI.Speech(this._client);\n    }\n}\n(function (Audio) {\n    Audio.Transcriptions = TranscriptionsAPI.Transcriptions;\n    Audio.Translations = TranslationsAPI.Translations;\n    Audio.Speech = SpeechAPI.Speech;\n})(Audio || (Audio = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nexport class Batches extends APIResource {\n    /**\n     * Creates and executes a batch from an uploaded file of requests\n     */\n    create(body, options) {\n        return this._client.post('/batches', { body, ...options });\n    }\n    /**\n     * Retrieves a batch.\n     */\n    retrieve(batchId, options) {\n        return this._client.get(`/batches/${batchId}`, options);\n    }\n    /**\n     * Cancels an in-progress batch.\n     */\n    cancel(batchId, options) {\n        return this._client.post(`/batches/${batchId}/cancel`, options);\n    }\n}\n(function (Batches) {\n})(Batches || (Batches = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as FilesAPI from 'openai/resources/beta/assistants/files';\nimport { CursorPage } from 'openai/pagination';\nexport class Files extends APIResource {\n    /**\n     * Create an assistant file by attaching a\n     * [File](https://platform.openai.com/docs/api-reference/files) to an\n     * [assistant](https://platform.openai.com/docs/api-reference/assistants).\n     */\n    create(assistantId, body, options) {\n        return this._client.post(`/assistants/${assistantId}/files`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves an AssistantFile.\n     */\n    retrieve(assistantId, fileId, options) {\n        return this._client.get(`/assistants/${assistantId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(assistantId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(assistantId, {}, query);\n        }\n        return this._client.getAPIList(`/assistants/${assistantId}/files`, AssistantFilesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Delete an assistant file.\n     */\n    del(assistantId, fileId, options) {\n        return this._client.delete(`/assistants/${assistantId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\nexport class AssistantFilesPage extends CursorPage {\n}\n(function (Files) {\n    Files.AssistantFilesPage = FilesAPI.AssistantFilesPage;\n})(Files || (Files = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as AssistantsAPI from 'openai/resources/beta/assistants/assistants';\nimport * as FilesAPI from 'openai/resources/beta/assistants/files';\nimport { CursorPage } from 'openai/pagination';\nexport class Assistants extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n    }\n    /**\n     * Create an assistant with a model and instructions.\n     */\n    create(body, options) {\n        return this._client.post('/assistants', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves an assistant.\n     */\n    retrieve(assistantId, options) {\n        return this._client.get(`/assistants/${assistantId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies an assistant.\n     */\n    update(assistantId, body, options) {\n        return this._client.post(`/assistants/${assistantId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/assistants', AssistantsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Delete an assistant.\n     */\n    del(assistantId, options) {\n        return this._client.delete(`/assistants/${assistantId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\nexport class AssistantsPage extends CursorPage {\n}\n(function (Assistants) {\n    Assistants.AssistantsPage = AssistantsAPI.AssistantsPage;\n    Assistants.Files = FilesAPI.Files;\n    Assistants.AssistantFilesPage = FilesAPI.AssistantFilesPage;\n})(Assistants || (Assistants = {}));\n", "export function isRunnableFunctionWithParse(fn) {\n    return typeof fn.parse === 'function';\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n *\n * @deprecated - please use ParsingToolFunction instead.\n */\nexport class ParsingFunction {\n    constructor(input) {\n        this.function = input.function;\n        this.parse = input.parse;\n        this.parameters = input.parameters;\n        this.description = input.description;\n        this.name = input.name;\n    }\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */\nexport class ParsingToolFunction {\n    constructor(input) {\n        this.type = 'function';\n        this.function = input;\n    }\n}\n", "export const isAssistantMessage = (message) => {\n    return message?.role === 'assistant';\n};\nexport const isFunctionMessage = (message) => {\n    return message?.role === 'function';\n};\nexport const isToolMessage = (message) => {\n    return message?.role === 'tool';\n};\nexport function isPresent(obj) {\n    return obj != null;\n}\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_connectedPromise, _AbstractChatCompletionRunner_resolveConnectedPromise, _AbstractChatCompletionRunner_rejectConnectedPromise, _AbstractChatCompletionRunner_endPromise, _AbstractChatCompletionRunner_resolveEndPromise, _AbstractChatCompletionRunner_rejectEndPromise, _AbstractChatCompletionRunner_listeners, _AbstractChatCompletionRunner_ended, _AbstractChatCompletionRunner_errored, _AbstractChatCompletionRunner_aborted, _AbstractChatCompletionRunner_catchingPromiseCreated, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionCall, _AbstractChatCompletionRunner_getFinalFunctionCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_handleError, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\nimport { APIUserAbortError, OpenAIError } from 'openai/error';\nimport { isRunnableFunctionWithParse, } from \"./RunnableFunction.mjs\";\nimport { isAssistantMessage, isFunctionMessage, isToolMessage } from \"./chatCompletionUtils.mjs\";\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nexport class AbstractChatCompletionRunner {\n    constructor() {\n        _AbstractChatCompletionRunner_instances.add(this);\n        this.controller = new AbortController();\n        _AbstractChatCompletionRunner_connectedPromise.set(this, void 0);\n        _AbstractChatCompletionRunner_resolveConnectedPromise.set(this, () => { });\n        _AbstractChatCompletionRunner_rejectConnectedPromise.set(this, () => { });\n        _AbstractChatCompletionRunner_endPromise.set(this, void 0);\n        _AbstractChatCompletionRunner_resolveEndPromise.set(this, () => { });\n        _AbstractChatCompletionRunner_rejectEndPromise.set(this, () => { });\n        _AbstractChatCompletionRunner_listeners.set(this, {});\n        this._chatCompletions = [];\n        this.messages = [];\n        _AbstractChatCompletionRunner_ended.set(this, false);\n        _AbstractChatCompletionRunner_errored.set(this, false);\n        _AbstractChatCompletionRunner_aborted.set(this, false);\n        _AbstractChatCompletionRunner_catchingPromiseCreated.set(this, false);\n        _AbstractChatCompletionRunner_handleError.set(this, (error) => {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_errored, true, \"f\");\n            if (error instanceof Error && error.name === 'AbortError') {\n                error = new APIUserAbortError();\n            }\n            if (error instanceof APIUserAbortError) {\n                __classPrivateFieldSet(this, _AbstractChatCompletionRunner_aborted, true, \"f\");\n                return this._emit('abort', error);\n            }\n            if (error instanceof OpenAIError) {\n                return this._emit('error', error);\n            }\n            if (error instanceof Error) {\n                const openAIError = new OpenAIError(error.message);\n                // @ts-ignore\n                openAIError.cause = error;\n                return this._emit('error', openAIError);\n            }\n            return this._emit('error', new OpenAIError(String(error)));\n        });\n        __classPrivateFieldSet(this, _AbstractChatCompletionRunner_connectedPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_resolveConnectedPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        __classPrivateFieldSet(this, _AbstractChatCompletionRunner_endPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_resolveEndPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_connectedPromise, \"f\").catch(() => { });\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_endPromise, \"f\").catch(() => { });\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(() => {\n            executor().then(() => {\n                this._emitFinal();\n                this._emit('end');\n            }, __classPrivateFieldGet(this, _AbstractChatCompletionRunner_handleError, \"f\"));\n        }, 0);\n    }\n    _addChatCompletion(chatCompletion) {\n        this._chatCompletions.push(chatCompletion);\n        this._emit('chatCompletion', chatCompletion);\n        const message = chatCompletion.choices[0]?.message;\n        if (message)\n            this._addMessage(message);\n        return chatCompletion;\n    }\n    _addMessage(message, emit = true) {\n        if (!('content' in message))\n            message.content = null;\n        this.messages.push(message);\n        if (emit) {\n            this._emit('message', message);\n            if ((isFunctionMessage(message) || isToolMessage(message)) && message.content) {\n                // Note, this assumes that {role: 'tool', content: â€¦} is always the result of a call of tool of type=function.\n                this._emit('functionCallResult', message.content);\n            }\n            else if (isAssistantMessage(message) && message.function_call) {\n                this._emit('functionCall', message.function_call);\n            }\n            else if (isAssistantMessage(message) && message.tool_calls) {\n                for (const tool_call of message.tool_calls) {\n                    if (tool_call.type === 'function') {\n                        this._emit('functionCall', tool_call.function);\n                    }\n                }\n            }\n        }\n    }\n    _connected() {\n        if (this.ended)\n            return;\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_resolveConnectedPromise, \"f\").call(this);\n        this._emit('connect');\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_ended, \"f\");\n    }\n    get errored() {\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_errored, \"f\");\n    }\n    get aborted() {\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    on(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] = []);\n        listeners.push({ listener });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    off(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event];\n        if (!listeners)\n            return this;\n        const index = listeners.findIndex((l) => l.listener === listener);\n        if (index >= 0)\n            listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    once(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] = []);\n        listeners.push({ listener, once: true });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */\n    emitted(event) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_catchingPromiseCreated, true, \"f\");\n            if (event !== 'error')\n                this.once('error', reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        __classPrivateFieldSet(this, _AbstractChatCompletionRunner_catchingPromiseCreated, true, \"f\");\n        await __classPrivateFieldGet(this, _AbstractChatCompletionRunner_endPromise, \"f\");\n    }\n    /**\n     * @returns a promise that resolves with the final ChatCompletion, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n     */\n    async finalChatCompletion() {\n        await this.done();\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (!completion)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return completion;\n    }\n    /**\n     * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalContent() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalMessage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalFunctionCall() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n    }\n    async finalFunctionCallResult() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n    }\n    async totalUsage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n    }\n    allChatCompletions() {\n        return [...this._chatCompletions];\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if (__classPrivateFieldGet(this, _AbstractChatCompletionRunner_ended, \"f\")) {\n            return;\n        }\n        if (event === 'end') {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_ended, true, \"f\");\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event];\n        if (listeners) {\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] = listeners.filter((l) => !l.once);\n            listeners.forEach(({ listener }) => listener(...args));\n        }\n        if (event === 'abort') {\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _AbstractChatCompletionRunner_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n            return;\n        }\n        if (event === 'error') {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _AbstractChatCompletionRunner_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n        }\n    }\n    _emitFinal() {\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (completion)\n            this._emit('finalChatCompletion', completion);\n        const finalMessage = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n        if (finalMessage)\n            this._emit('finalMessage', finalMessage);\n        const finalContent = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n        if (finalContent)\n            this._emit('finalContent', finalContent);\n        const finalFunctionCall = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n        if (finalFunctionCall)\n            this._emit('finalFunctionCall', finalFunctionCall);\n        const finalFunctionCallResult = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n        if (finalFunctionCallResult != null)\n            this._emit('finalFunctionCallResult', finalFunctionCallResult);\n        if (this._chatCompletions.some((c) => c.usage)) {\n            this._emit('totalUsage', __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n        }\n    }\n    async _createChatCompletion(completions, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n        const chatCompletion = await completions.create({ ...params, stream: false }, { ...options, signal: this.controller.signal });\n        this._connected();\n        return this._addChatCompletion(chatCompletion);\n    }\n    async _runChatCompletion(completions, params, options) {\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        return await this._createChatCompletion(completions, params, options);\n    }\n    async _runFunctions(completions, params, options) {\n        const role = 'function';\n        const { function_call = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof function_call !== 'string' && function_call?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        const functionsByName = {};\n        for (const f of params.functions) {\n            functionsByName[f.name || f.function.name] = f;\n        }\n        const functions = params.functions.map((f) => ({\n            name: f.name || f.function.name,\n            parameters: f.parameters,\n            description: f.description,\n        }));\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(completions, {\n                ...restParams,\n                function_call,\n                functions,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.function_call)\n                return;\n            const { name, arguments: args } = message.function_call;\n            const fn = functionsByName[name];\n            if (!fn) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. Available options are: ${functions\n                    .map((f) => JSON.stringify(f.name))\n                    .join(', ')}. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            let parsed;\n            try {\n                parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n            }\n            catch (error) {\n                this._addMessage({\n                    role,\n                    name,\n                    content: error instanceof Error ? error.message : String(error),\n                });\n                continue;\n            }\n            // @ts-expect-error it can't rule out `never` type.\n            const rawContent = await fn.function(parsed, this);\n            const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n            this._addMessage({ role, name, content });\n            if (singleFunctionToCall)\n                return;\n        }\n    }\n    async _runTools(completions, params, options) {\n        const role = 'tool';\n        const { tool_choice = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof tool_choice !== 'string' && tool_choice?.function?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        const functionsByName = {};\n        for (const f of params.tools) {\n            if (f.type === 'function') {\n                functionsByName[f.function.name || f.function.function.name] = f.function;\n            }\n        }\n        const tools = 'tools' in params ?\n            params.tools.map((t) => t.type === 'function' ?\n                {\n                    type: 'function',\n                    function: {\n                        name: t.function.name || t.function.function.name,\n                        parameters: t.function.parameters,\n                        description: t.function.description,\n                    },\n                }\n                : t)\n            : undefined;\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(completions, {\n                ...restParams,\n                tool_choice,\n                tools,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.tool_calls) {\n                return;\n            }\n            for (const tool_call of message.tool_calls) {\n                if (tool_call.type !== 'function')\n                    continue;\n                const tool_call_id = tool_call.id;\n                const { name, arguments: args } = tool_call.function;\n                const fn = functionsByName[name];\n                if (!fn) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${tools\n                        .map((f) => JSON.stringify(f.function.name))\n                        .join(', ')}. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                let parsed;\n                try {\n                    parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n                }\n                catch (error) {\n                    const content = error instanceof Error ? error.message : String(error);\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                // @ts-expect-error it can't rule out `never` type.\n                const rawContent = await fn.function(parsed, this);\n                const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n                this._addMessage({ role, tool_call_id, content });\n                if (singleFunctionToCall) {\n                    return;\n                }\n            }\n        }\n        return;\n    }\n}\n_AbstractChatCompletionRunner_connectedPromise = new WeakMap(), _AbstractChatCompletionRunner_resolveConnectedPromise = new WeakMap(), _AbstractChatCompletionRunner_rejectConnectedPromise = new WeakMap(), _AbstractChatCompletionRunner_endPromise = new WeakMap(), _AbstractChatCompletionRunner_resolveEndPromise = new WeakMap(), _AbstractChatCompletionRunner_rejectEndPromise = new WeakMap(), _AbstractChatCompletionRunner_listeners = new WeakMap(), _AbstractChatCompletionRunner_ended = new WeakMap(), _AbstractChatCompletionRunner_errored = new WeakMap(), _AbstractChatCompletionRunner_aborted = new WeakMap(), _AbstractChatCompletionRunner_catchingPromiseCreated = new WeakMap(), _AbstractChatCompletionRunner_handleError = new WeakMap(), _AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content ?? null;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n    let i = this.messages.length;\n    while (i-- > 0) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message)) {\n            return { ...message, content: message.content ?? null };\n        }\n    }\n    throw new OpenAIError('stream ended without producing a ChatCompletionMessage with role=assistant');\n}, _AbstractChatCompletionRunner_getFinalFunctionCall = function _AbstractChatCompletionRunner_getFinalFunctionCall() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message) && message?.function_call) {\n            return message.function_call;\n        }\n        if (isAssistantMessage(message) && message?.tool_calls?.length) {\n            return message.tool_calls.at(-1)?.function;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_getFinalFunctionCallResult = function _AbstractChatCompletionRunner_getFinalFunctionCallResult() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isFunctionMessage(message) && message.content != null) {\n            return message.content;\n        }\n        if (isToolMessage(message) &&\n            message.content != null &&\n            this.messages.some((x) => x.role === 'assistant' &&\n                x.tool_calls?.some((y) => y.type === 'function' && y.id === message.tool_call_id))) {\n            return message.content;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n    const total = {\n        completion_tokens: 0,\n        prompt_tokens: 0,\n        total_tokens: 0,\n    };\n    for (const { usage } of this._chatCompletions) {\n        if (usage) {\n            total.completion_tokens += usage.completion_tokens;\n            total.prompt_tokens += usage.prompt_tokens;\n            total.total_tokens += usage.total_tokens;\n        }\n    }\n    return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n    if (params.n != null && params.n > 1) {\n        throw new OpenAIError('ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.');\n    }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n    return (typeof rawContent === 'string' ? rawContent\n        : rawContent === undefined ? 'undefined'\n            : JSON.stringify(rawContent));\n};\n", "import { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { isAssistantMessage } from \"./chatCompletionUtils.mjs\";\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner {\n    /** @deprecated - please use `runTools` instead. */\n    static runFunctions(completions, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n        };\n        runner._run(() => runner._runFunctions(completions, params, opts));\n        return runner;\n    }\n    static runTools(completions, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(completions, params, opts));\n        return runner;\n    }\n    _addMessage(message) {\n        super._addMessage(message);\n        if (isAssistantMessage(message) && message.content) {\n            this._emit('content', message.content);\n        }\n    }\n}\n", "var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _ChatCompletionStream_instances, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_addChunk, _ChatCompletionStream_endRequest, _ChatCompletionStream_accumulateChatCompletion;\nimport { OpenAIError, APIUserAbortError } from 'openai/error';\nimport { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { Stream } from 'openai/streaming';\nexport class ChatCompletionStream extends AbstractChatCompletionRunner {\n    constructor() {\n        super(...arguments);\n        _ChatCompletionStream_instances.add(this);\n        _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n    }\n    get currentChatCompletionSnapshot() {\n        return __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStream();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createChatCompletion(completions, params, options) {\n        const runner = new ChatCompletionStream();\n        runner._run(() => runner._runChatCompletion(completions, { ...params, stream: true }, { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } }));\n        return runner;\n    }\n    async _createChatCompletion(completions, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        const stream = await completions.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const chunk of stream) {\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        let chatId;\n        for await (const chunk of stream) {\n            if (chatId && chatId !== chunk.id) {\n                // A new request has been made.\n                this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n            }\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n            chatId = chunk.id;\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    [(_ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n        if (this.ended)\n            return;\n        const completion = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n        this._emit('chunk', chunk, completion);\n        const delta = chunk.choices[0]?.delta?.content;\n        const snapshot = completion.choices[0]?.message;\n        if (delta != null && snapshot?.role === 'assistant' && snapshot?.content) {\n            this._emit('content', delta, snapshot.content);\n        }\n    }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any chunks`);\n        }\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n        return finalizeChatCompletion(snapshot);\n    }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n        var _a, _b, _c;\n        let snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        const { choices, ...rest } = chunk;\n        if (!snapshot) {\n            snapshot = __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n                ...rest,\n                choices: [],\n            }, \"f\");\n        }\n        else {\n            Object.assign(snapshot, rest);\n        }\n        for (const { delta, finish_reason, index, logprobs = null, ...other } of chunk.choices) {\n            let choice = snapshot.choices[index];\n            if (!choice) {\n                choice = snapshot.choices[index] = { finish_reason, index, message: {}, logprobs, ...other };\n            }\n            if (logprobs) {\n                if (!choice.logprobs) {\n                    choice.logprobs = Object.assign({}, logprobs);\n                }\n                else {\n                    const { content, ...rest } = logprobs;\n                    Object.assign(choice.logprobs, rest);\n                    if (content) {\n                        (_a = choice.logprobs).content ?? (_a.content = []);\n                        choice.logprobs.content.push(...content);\n                    }\n                }\n            }\n            if (finish_reason)\n                choice.finish_reason = finish_reason;\n            Object.assign(choice, other);\n            if (!delta)\n                continue; // Shouldn't happen; just in case.\n            const { content, function_call, role, tool_calls, ...rest } = delta;\n            Object.assign(choice.message, rest);\n            if (content)\n                choice.message.content = (choice.message.content || '') + content;\n            if (role)\n                choice.message.role = role;\n            if (function_call) {\n                if (!choice.message.function_call) {\n                    choice.message.function_call = function_call;\n                }\n                else {\n                    if (function_call.name)\n                        choice.message.function_call.name = function_call.name;\n                    if (function_call.arguments) {\n                        (_b = choice.message.function_call).arguments ?? (_b.arguments = '');\n                        choice.message.function_call.arguments += function_call.arguments;\n                    }\n                }\n            }\n            if (tool_calls) {\n                if (!choice.message.tool_calls)\n                    choice.message.tool_calls = [];\n                for (const { index, id, type, function: fn, ...rest } of tool_calls) {\n                    const tool_call = ((_c = choice.message.tool_calls)[index] ?? (_c[index] = {}));\n                    Object.assign(tool_call, rest);\n                    if (id)\n                        tool_call.id = id;\n                    if (type)\n                        tool_call.type = type;\n                    if (fn)\n                        tool_call.function ?? (tool_call.function = { arguments: '' });\n                    if (fn?.name)\n                        tool_call.function.name = fn.name;\n                    if (fn?.arguments)\n                        tool_call.function.arguments += fn.arguments;\n                }\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('chunk', (chunk) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(chunk);\n            }\n            else {\n                pushQueue.push(chunk);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\nfunction finalizeChatCompletion(snapshot) {\n    const { id, choices, created, model, system_fingerprint, ...rest } = snapshot;\n    return {\n        ...rest,\n        id,\n        choices: choices.map(({ message, finish_reason, index, logprobs, ...choiceRest }) => {\n            if (!finish_reason)\n                throw new OpenAIError(`missing finish_reason for choice ${index}`);\n            const { content = null, function_call, tool_calls, ...messageRest } = message;\n            const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n            if (!role)\n                throw new OpenAIError(`missing role for choice ${index}`);\n            if (function_call) {\n                const { arguments: args, name } = function_call;\n                if (args == null)\n                    throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n                if (!name)\n                    throw new OpenAIError(`missing function_call.name for choice ${index}`);\n                return {\n                    ...choiceRest,\n                    message: { content, function_call: { arguments: args, name }, role },\n                    finish_reason,\n                    index,\n                    logprobs,\n                };\n            }\n            if (tool_calls) {\n                return {\n                    ...choiceRest,\n                    index,\n                    finish_reason,\n                    logprobs,\n                    message: {\n                        ...messageRest,\n                        role,\n                        content,\n                        tool_calls: tool_calls.map((tool_call, i) => {\n                            const { function: fn, type, id, ...toolRest } = tool_call;\n                            const { arguments: args, name, ...fnRest } = fn || {};\n                            if (id == null)\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                            if (type == null)\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                            if (name == null)\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n                            if (args == null)\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n                            return { ...toolRest, id, type, function: { ...fnRest, name, arguments: args } };\n                        }),\n                    },\n                };\n            }\n            return {\n                ...choiceRest,\n                message: { ...messageRest, content, role },\n                finish_reason,\n                index,\n                logprobs,\n            };\n        }),\n        created,\n        model,\n        object: 'chat.completion',\n        ...(system_fingerprint ? { system_fingerprint } : {}),\n    };\n}\nfunction str(x) {\n    return JSON.stringify(x);\n}\n", "import { ChatCompletionStream } from \"./ChatCompletionStream.mjs\";\nexport class ChatCompletionStreamingRunner extends ChatCompletionStream {\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStreamingRunner();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    /** @deprecated - please use `runTools` instead. */\n    static runFunctions(completions, params, options) {\n        const runner = new ChatCompletionStreamingRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n        };\n        runner._run(() => runner._runFunctions(completions, params, opts));\n        return runner;\n    }\n    static runTools(completions, params, options) {\n        const runner = new ChatCompletionStreamingRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(completions, params, opts));\n        return runner;\n    }\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport { ChatCompletionRunner } from 'openai/lib/ChatCompletionRunner';\nexport { ChatCompletionRunner } from 'openai/lib/ChatCompletionRunner';\nimport { ChatCompletionStreamingRunner, } from 'openai/lib/ChatCompletionStreamingRunner';\nexport { ChatCompletionStreamingRunner, } from 'openai/lib/ChatCompletionStreamingRunner';\nexport { ParsingFunction, ParsingToolFunction, } from 'openai/lib/RunnableFunction';\nimport { ChatCompletionStream } from 'openai/lib/ChatCompletionStream';\nexport { ChatCompletionStream } from 'openai/lib/ChatCompletionStream';\nexport class Completions extends APIResource {\n    runFunctions(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runFunctions(this._client.chat.completions, body, options);\n        }\n        return ChatCompletionRunner.runFunctions(this._client.chat.completions, body, options);\n    }\n    runTools(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runTools(this._client.chat.completions, body, options);\n        }\n        return ChatCompletionRunner.runTools(this._client.chat.completions, body, options);\n    }\n    /**\n     * Creates a chat completion stream\n     */\n    stream(body, options) {\n        return ChatCompletionStream.createChatCompletion(this._client.chat.completions, body, options);\n    }\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport * as CompletionsAPI from 'openai/resources/beta/chat/completions';\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\n(function (Chat) {\n    Chat.Completions = CompletionsAPI.Completions;\n})(Chat || (Chat = {}));\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractAssistantStreamRunner_connectedPromise, _AbstractAssistantStreamRunner_resolveConnectedPromise, _AbstractAssistantStreamRunner_rejectConnectedPromise, _AbstractAssistantStreamRunner_endPromise, _AbstractAssistantStreamRunner_resolveEndPromise, _AbstractAssistantStreamRunner_rejectEndPromise, _AbstractAssistantStreamRunner_listeners, _AbstractAssistantStreamRunner_ended, _AbstractAssistantStreamRunner_errored, _AbstractAssistantStreamRunner_aborted, _AbstractAssistantStreamRunner_catchingPromiseCreated, _AbstractAssistantStreamRunner_handleError;\nimport { APIUserAbortError, OpenAIError } from 'openai/error';\nexport class AbstractAssistantStreamRunner {\n    constructor() {\n        this.controller = new AbortController();\n        _AbstractAssistantStreamRunner_connectedPromise.set(this, void 0);\n        _AbstractAssistantStreamRunner_resolveConnectedPromise.set(this, () => { });\n        _AbstractAssistantStreamRunner_rejectConnectedPromise.set(this, () => { });\n        _AbstractAssistantStreamRunner_endPromise.set(this, void 0);\n        _AbstractAssistantStreamRunner_resolveEndPromise.set(this, () => { });\n        _AbstractAssistantStreamRunner_rejectEndPromise.set(this, () => { });\n        _AbstractAssistantStreamRunner_listeners.set(this, {});\n        _AbstractAssistantStreamRunner_ended.set(this, false);\n        _AbstractAssistantStreamRunner_errored.set(this, false);\n        _AbstractAssistantStreamRunner_aborted.set(this, false);\n        _AbstractAssistantStreamRunner_catchingPromiseCreated.set(this, false);\n        _AbstractAssistantStreamRunner_handleError.set(this, (error) => {\n            __classPrivateFieldSet(this, _AbstractAssistantStreamRunner_errored, true, \"f\");\n            if (error instanceof Error && error.name === 'AbortError') {\n                error = new APIUserAbortError();\n            }\n            if (error instanceof APIUserAbortError) {\n                __classPrivateFieldSet(this, _AbstractAssistantStreamRunner_aborted, true, \"f\");\n                return this._emit('abort', error);\n            }\n            if (error instanceof OpenAIError) {\n                return this._emit('error', error);\n            }\n            if (error instanceof Error) {\n                const openAIError = new OpenAIError(error.message);\n                // @ts-ignore\n                openAIError.cause = error;\n                return this._emit('error', openAIError);\n            }\n            return this._emit('error', new OpenAIError(String(error)));\n        });\n        __classPrivateFieldSet(this, _AbstractAssistantStreamRunner_connectedPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _AbstractAssistantStreamRunner_resolveConnectedPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _AbstractAssistantStreamRunner_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        __classPrivateFieldSet(this, _AbstractAssistantStreamRunner_endPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _AbstractAssistantStreamRunner_resolveEndPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _AbstractAssistantStreamRunner_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        __classPrivateFieldGet(this, _AbstractAssistantStreamRunner_connectedPromise, \"f\").catch(() => { });\n        __classPrivateFieldGet(this, _AbstractAssistantStreamRunner_endPromise, \"f\").catch(() => { });\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(() => {\n            executor().then(() => {\n                // this._emitFinal();\n                this._emit('end');\n            }, __classPrivateFieldGet(this, _AbstractAssistantStreamRunner_handleError, \"f\"));\n        }, 0);\n    }\n    _addRun(run) {\n        return run;\n    }\n    _connected() {\n        if (this.ended)\n            return;\n        __classPrivateFieldGet(this, _AbstractAssistantStreamRunner_resolveConnectedPromise, \"f\").call(this);\n        this._emit('connect');\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _AbstractAssistantStreamRunner_ended, \"f\");\n    }\n    get errored() {\n        return __classPrivateFieldGet(this, _AbstractAssistantStreamRunner_errored, \"f\");\n    }\n    get aborted() {\n        return __classPrivateFieldGet(this, _AbstractAssistantStreamRunner_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    on(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _AbstractAssistantStreamRunner_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _AbstractAssistantStreamRunner_listeners, \"f\")[event] = []);\n        listeners.push({ listener });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    off(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _AbstractAssistantStreamRunner_listeners, \"f\")[event];\n        if (!listeners)\n            return this;\n        const index = listeners.findIndex((l) => l.listener === listener);\n        if (index >= 0)\n            listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    once(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _AbstractAssistantStreamRunner_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _AbstractAssistantStreamRunner_listeners, \"f\")[event] = []);\n        listeners.push({ listener, once: true });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */\n    emitted(event) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _AbstractAssistantStreamRunner_catchingPromiseCreated, true, \"f\");\n            if (event !== 'error')\n                this.once('error', reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        __classPrivateFieldSet(this, _AbstractAssistantStreamRunner_catchingPromiseCreated, true, \"f\");\n        await __classPrivateFieldGet(this, _AbstractAssistantStreamRunner_endPromise, \"f\");\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if (__classPrivateFieldGet(this, _AbstractAssistantStreamRunner_ended, \"f\")) {\n            return;\n        }\n        if (event === 'end') {\n            __classPrivateFieldSet(this, _AbstractAssistantStreamRunner_ended, true, \"f\");\n            __classPrivateFieldGet(this, _AbstractAssistantStreamRunner_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = __classPrivateFieldGet(this, _AbstractAssistantStreamRunner_listeners, \"f\")[event];\n        if (listeners) {\n            __classPrivateFieldGet(this, _AbstractAssistantStreamRunner_listeners, \"f\")[event] = listeners.filter((l) => !l.once);\n            listeners.forEach(({ listener }) => listener(...args));\n        }\n        if (event === 'abort') {\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _AbstractAssistantStreamRunner_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _AbstractAssistantStreamRunner_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _AbstractAssistantStreamRunner_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n            return;\n        }\n        if (event === 'error') {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _AbstractAssistantStreamRunner_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _AbstractAssistantStreamRunner_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _AbstractAssistantStreamRunner_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n        }\n    }\n    async _threadAssistantStream(body, thread, options) {\n        return await this._createThreadAssistantStream(thread, body, options);\n    }\n    async _runAssistantStream(threadId, runs, params, options) {\n        return await this._createAssistantStream(runs, threadId, params, options);\n    }\n    async _runToolAssistantStream(threadId, runId, runs, params, options) {\n        return await this._createToolAssistantStream(runs, threadId, runId, params, options);\n    }\n    async _createThreadAssistantStream(thread, body, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        // this.#validateParams(params);\n        const runResult = await thread.createAndRun({ ...body, stream: false }, { ...options, signal: this.controller.signal });\n        this._connected();\n        return this._addRun(runResult);\n    }\n    async _createToolAssistantStream(run, threadId, runId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const runResult = await run.submitToolOutputs(threadId, runId, { ...params, stream: false }, { ...options, signal: this.controller.signal });\n        this._connected();\n        return this._addRun(runResult);\n    }\n    async _createAssistantStream(run, threadId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        // this.#validateParams(params);\n        const runResult = await run.create(threadId, { ...params, stream: false }, { ...options, signal: this.controller.signal });\n        this._connected();\n        return this._addRun(runResult);\n    }\n}\n_AbstractAssistantStreamRunner_connectedPromise = new WeakMap(), _AbstractAssistantStreamRunner_resolveConnectedPromise = new WeakMap(), _AbstractAssistantStreamRunner_rejectConnectedPromise = new WeakMap(), _AbstractAssistantStreamRunner_endPromise = new WeakMap(), _AbstractAssistantStreamRunner_resolveEndPromise = new WeakMap(), _AbstractAssistantStreamRunner_rejectEndPromise = new WeakMap(), _AbstractAssistantStreamRunner_listeners = new WeakMap(), _AbstractAssistantStreamRunner_ended = new WeakMap(), _AbstractAssistantStreamRunner_errored = new WeakMap(), _AbstractAssistantStreamRunner_aborted = new WeakMap(), _AbstractAssistantStreamRunner_catchingPromiseCreated = new WeakMap(), _AbstractAssistantStreamRunner_handleError = new WeakMap();\n", "var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _AssistantStream_instances, _AssistantStream_events, _AssistantStream_runStepSnapshots, _AssistantStream_messageSnapshots, _AssistantStream_messageSnapshot, _AssistantStream_finalRun, _AssistantStream_currentContentIndex, _AssistantStream_currentContent, _AssistantStream_currentToolCallIndex, _AssistantStream_currentToolCall, _AssistantStream_currentEvent, _AssistantStream_currentRunSnapshot, _AssistantStream_currentRunStepSnapshot, _AssistantStream_addEvent, _AssistantStream_endRequest, _AssistantStream_handleMessage, _AssistantStream_handleRunStep, _AssistantStream_handleEvent, _AssistantStream_accumulateRunStep, _AssistantStream_accumulateMessage, _AssistantStream_accumulateContent, _AssistantStream_handleRun;\nimport * as Core from 'openai/core';\nimport { AbstractAssistantStreamRunner, } from \"./AbstractAssistantStreamRunner.mjs\";\nimport { Stream } from 'openai/streaming';\nimport { APIUserAbortError, OpenAIError } from 'openai/error';\nexport class AssistantStream extends AbstractAssistantStreamRunner {\n    constructor() {\n        super(...arguments);\n        _AssistantStream_instances.add(this);\n        //Track all events in a single list for reference\n        _AssistantStream_events.set(this, []);\n        //Used to accumulate deltas\n        //We are accumulating many types so the value here is not strict\n        _AssistantStream_runStepSnapshots.set(this, {});\n        _AssistantStream_messageSnapshots.set(this, {});\n        _AssistantStream_messageSnapshot.set(this, void 0);\n        _AssistantStream_finalRun.set(this, void 0);\n        _AssistantStream_currentContentIndex.set(this, void 0);\n        _AssistantStream_currentContent.set(this, void 0);\n        _AssistantStream_currentToolCallIndex.set(this, void 0);\n        _AssistantStream_currentToolCall.set(this, void 0);\n        //For current snapshot methods\n        _AssistantStream_currentEvent.set(this, void 0);\n        _AssistantStream_currentRunSnapshot.set(this, void 0);\n        _AssistantStream_currentRunStepSnapshot.set(this, void 0);\n    }\n    [(_AssistantStream_events = new WeakMap(), _AssistantStream_runStepSnapshots = new WeakMap(), _AssistantStream_messageSnapshots = new WeakMap(), _AssistantStream_messageSnapshot = new WeakMap(), _AssistantStream_finalRun = new WeakMap(), _AssistantStream_currentContentIndex = new WeakMap(), _AssistantStream_currentContent = new WeakMap(), _AssistantStream_currentToolCallIndex = new WeakMap(), _AssistantStream_currentToolCall = new WeakMap(), _AssistantStream_currentEvent = new WeakMap(), _AssistantStream_currentRunSnapshot = new WeakMap(), _AssistantStream_currentRunStepSnapshot = new WeakMap(), _AssistantStream_instances = new WeakSet(), Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        //Catch all for passing along all events\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    static fromReadableStream(stream) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n    static createToolAssistantStream(threadId, runId, runs, body, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._runToolAssistantStream(threadId, runId, runs, body, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createToolAssistantStream(run, threadId, runId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.submitToolOutputs(threadId, runId, body, {\n            ...options,\n            signal: this.controller.signal,\n        });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static createThreadAssistantStream(body, thread, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._threadAssistantStream(body, thread, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    static createAssistantStream(threadId, runs, params, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._runAssistantStream(threadId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    currentEvent() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentEvent, \"f\");\n    }\n    currentRun() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunSnapshot, \"f\");\n    }\n    currentMessageSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\");\n    }\n    currentRunStepSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunStepSnapshot, \"f\");\n    }\n    async finalRunSteps() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\"));\n    }\n    async finalMessages() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\"));\n    }\n    async finalRun() {\n        await this.done();\n        if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n            throw Error('Final run was not received.');\n        return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n    }\n    async _createThreadAssistantStream(thread, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await thread.createAndRun(body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    async _createAssistantStream(run, threadId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.create(threadId, body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static accumulateDelta(acc, delta) {\n        for (const [key, deltaValue] of Object.entries(delta)) {\n            if (!acc.hasOwnProperty(key)) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            let accValue = acc[key];\n            if (accValue === null || accValue === undefined) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // We don't accumulate these special properties\n            if (key === 'index' || key === 'type') {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // Type-specific accumulation logic\n            if (typeof accValue === 'string' && typeof deltaValue === 'string') {\n                accValue += deltaValue;\n            }\n            else if (typeof accValue === 'number' && typeof deltaValue === 'number') {\n                accValue += deltaValue;\n            }\n            else if (Core.isObj(accValue) && Core.isObj(deltaValue)) {\n                accValue = this.accumulateDelta(accValue, deltaValue);\n            }\n            else if (Array.isArray(accValue) && Array.isArray(deltaValue)) {\n                if (accValue.every((x) => typeof x === 'string' || typeof x === 'number')) {\n                    accValue.push(...deltaValue); // Use spread syntax for efficient addition\n                    continue;\n                }\n            }\n            else {\n                throw Error(`Unhandled record type: ${key}, deltaValue: ${deltaValue}, accValue: ${accValue}`);\n            }\n            acc[key] = accValue;\n        }\n        return acc;\n    }\n}\n_AssistantStream_addEvent = function _AssistantStream_addEvent(event) {\n    if (this.ended)\n        return;\n    __classPrivateFieldSet(this, _AssistantStream_currentEvent, event, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleEvent).call(this, event);\n    switch (event.event) {\n        case 'thread.created':\n            //No action on this event.\n            break;\n        case 'thread.run.created':\n        case 'thread.run.queued':\n        case 'thread.run.in_progress':\n        case 'thread.run.requires_action':\n        case 'thread.run.completed':\n        case 'thread.run.failed':\n        case 'thread.run.cancelling':\n        case 'thread.run.cancelled':\n        case 'thread.run.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRun).call(this, event);\n            break;\n        case 'thread.run.step.created':\n        case 'thread.run.step.in_progress':\n        case 'thread.run.step.delta':\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRunStep).call(this, event);\n            break;\n        case 'thread.message.created':\n        case 'thread.message.in_progress':\n        case 'thread.message.delta':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleMessage).call(this, event);\n            break;\n        case 'error':\n            //This is included for completeness, but errors are processed in the SSE event processing so this should not occur\n            throw new Error('Encountered an error event in event processing - errors should be processed earlier');\n    }\n}, _AssistantStream_endRequest = function _AssistantStream_endRequest() {\n    if (this.ended) {\n        throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n        throw Error('Final run has not been received');\n    return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n}, _AssistantStream_handleMessage = function _AssistantStream_handleMessage(event) {\n    const [accumulatedMessage, newContent] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateMessage).call(this, event, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n    __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, accumulatedMessage, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\")[accumulatedMessage.id] = accumulatedMessage;\n    for (const content of newContent) {\n        const snapshotContent = accumulatedMessage.content[content.index];\n        if (snapshotContent?.type == 'text') {\n            this._emit('textCreated', snapshotContent.text);\n        }\n    }\n    switch (event.event) {\n        case 'thread.message.created':\n            this._emit('messageCreated', event.data);\n            break;\n        case 'thread.message.in_progress':\n            break;\n        case 'thread.message.delta':\n            this._emit('messageDelta', event.data.delta, accumulatedMessage);\n            if (event.data.delta.content) {\n                for (const content of event.data.delta.content) {\n                    //If it is text delta, emit a text delta event\n                    if (content.type == 'text' && content.text) {\n                        let textDelta = content.text;\n                        let snapshot = accumulatedMessage.content[content.index];\n                        if (snapshot && snapshot.type == 'text') {\n                            this._emit('textDelta', textDelta, snapshot.text);\n                        }\n                        else {\n                            throw Error('The snapshot associated with this text delta is not text or missing');\n                        }\n                    }\n                    if (content.index != __classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")) {\n                        //See if we have in progress content\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\")) {\n                            switch (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").type) {\n                                case 'text':\n                                    this._emit('textDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                                case 'image_file':\n                                    this._emit('imageFileDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                            }\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentContentIndex, content.index, \"f\");\n                    }\n                    __classPrivateFieldSet(this, _AssistantStream_currentContent, accumulatedMessage.content[content.index], \"f\");\n                }\n            }\n            break;\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //We emit the latest content we were working on on completion (including incomplete)\n            if (__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\") !== undefined) {\n                const currentContent = event.data.content[__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")];\n                if (currentContent) {\n                    switch (currentContent.type) {\n                        case 'image_file':\n                            this._emit('imageFileDone', currentContent.image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                        case 'text':\n                            this._emit('textDone', currentContent.text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                    }\n                }\n            }\n            if (__classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\")) {\n                this._emit('messageDone', event.data);\n            }\n            __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, undefined, \"f\");\n    }\n}, _AssistantStream_handleRunStep = function _AssistantStream_handleRunStep(event) {\n    const accumulatedRunStep = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateRunStep).call(this, event);\n    __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, accumulatedRunStep, \"f\");\n    switch (event.event) {\n        case 'thread.run.step.created':\n            this._emit('runStepCreated', event.data);\n            break;\n        case 'thread.run.step.delta':\n            const delta = event.data.delta;\n            if (delta.step_details &&\n                delta.step_details.type == 'tool_calls' &&\n                delta.step_details.tool_calls &&\n                accumulatedRunStep.step_details.type == 'tool_calls') {\n                for (const toolCall of delta.step_details.tool_calls) {\n                    if (toolCall.index == __classPrivateFieldGet(this, _AssistantStream_currentToolCallIndex, \"f\")) {\n                        this._emit('toolCallDelta', toolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index]);\n                    }\n                    else {\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                            this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCallIndex, toolCall.index, \"f\");\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index], \"f\");\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"))\n                            this._emit('toolCallCreated', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    }\n                }\n            }\n            this._emit('runStepDelta', event.data.delta, accumulatedRunStep);\n            break;\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, undefined, \"f\");\n            const details = event.data.step_details;\n            if (details.type == 'tool_calls') {\n                if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                    this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n                }\n            }\n            this._emit('runStepDone', event.data, accumulatedRunStep);\n            break;\n        case 'thread.run.step.in_progress':\n            break;\n    }\n}, _AssistantStream_handleEvent = function _AssistantStream_handleEvent(event) {\n    __classPrivateFieldGet(this, _AssistantStream_events, \"f\").push(event);\n    this._emit('event', event);\n}, _AssistantStream_accumulateRunStep = function _AssistantStream_accumulateRunStep(event) {\n    switch (event.event) {\n        case 'thread.run.step.created':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            return event.data;\n        case 'thread.run.step.delta':\n            let snapshot = __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n            if (!snapshot) {\n                throw Error('Received a RunStepDelta before creation of a snapshot');\n            }\n            let data = event.data;\n            if (data.delta) {\n                const accumulated = AssistantStream.accumulateDelta(snapshot, data.delta);\n                __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = accumulated;\n            }\n            return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n        case 'thread.run.step.in_progress':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            break;\n    }\n    if (__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id])\n        return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n    throw new Error('No snapshot available');\n}, _AssistantStream_accumulateMessage = function _AssistantStream_accumulateMessage(event, snapshot) {\n    let newContent = [];\n    switch (event.event) {\n        case 'thread.message.created':\n            //On creation the snapshot is just the initial message\n            return [event.data, newContent];\n        case 'thread.message.delta':\n            if (!snapshot) {\n                throw Error('Received a delta with no existing snapshot (there should be one from message creation)');\n            }\n            let data = event.data;\n            //If this delta does not have content, nothing to process\n            if (data.delta.content) {\n                for (const contentElement of data.delta.content) {\n                    if (contentElement.index in snapshot.content) {\n                        let currentContent = snapshot.content[contentElement.index];\n                        snapshot.content[contentElement.index] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateContent).call(this, contentElement, currentContent);\n                    }\n                    else {\n                        snapshot.content[contentElement.index] = contentElement;\n                        //This is a new element\n                        newContent.push(contentElement);\n                    }\n                }\n            }\n            return [snapshot, newContent];\n        case 'thread.message.in_progress':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //No changes on other thread events\n            if (snapshot) {\n                return [snapshot, newContent];\n            }\n            else {\n                throw Error('Received thread message event with no existing snapshot');\n            }\n    }\n    throw Error('Tried to accumulate a non-message event');\n}, _AssistantStream_accumulateContent = function _AssistantStream_accumulateContent(contentElement, currentContent) {\n    return AssistantStream.accumulateDelta(currentContent, contentElement);\n}, _AssistantStream_handleRun = function _AssistantStream_handleRun(event) {\n    __classPrivateFieldSet(this, _AssistantStream_currentRunSnapshot, event.data, \"f\");\n    switch (event.event) {\n        case 'thread.run.created':\n            break;\n        case 'thread.run.queued':\n            break;\n        case 'thread.run.in_progress':\n            break;\n        case 'thread.run.requires_action':\n        case 'thread.run.cancelled':\n        case 'thread.run.failed':\n        case 'thread.run.completed':\n        case 'thread.run.expired':\n            __classPrivateFieldSet(this, _AssistantStream_finalRun, event.data, \"f\");\n            if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n            }\n            break;\n        case 'thread.run.cancelling':\n            break;\n    }\n};\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as FilesAPI from 'openai/resources/beta/threads/messages/files';\nimport { CursorPage } from 'openai/pagination';\nexport class Files extends APIResource {\n    /**\n     * Retrieves a message file.\n     */\n    retrieve(threadId, messageId, fileId, options) {\n        return this._client.get(`/threads/${threadId}/messages/${messageId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(threadId, messageId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, messageId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/messages/${messageId}/files`, MessageFilesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\nexport class MessageFilesPage extends CursorPage {\n}\n(function (Files) {\n    Files.MessageFilesPage = FilesAPI.MessageFilesPage;\n})(Files || (Files = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as MessagesAPI from 'openai/resources/beta/threads/messages/messages';\nimport * as FilesAPI from 'openai/resources/beta/threads/messages/files';\nimport { CursorPage } from 'openai/pagination';\nexport class Messages extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n    }\n    /**\n     * Create a message.\n     */\n    create(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}/messages`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieve a message.\n     */\n    retrieve(threadId, messageId, options) {\n        return this._client.get(`/threads/${threadId}/messages/${messageId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a message.\n     */\n    update(threadId, messageId, body, options) {\n        return this._client.post(`/threads/${threadId}/messages/${messageId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(threadId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/messages`, MessagesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\nexport class MessagesPage extends CursorPage {\n}\n(function (Messages) {\n    Messages.MessagesPage = MessagesAPI.MessagesPage;\n    Messages.Files = FilesAPI.Files;\n    Messages.MessageFilesPage = FilesAPI.MessageFilesPage;\n})(Messages || (Messages = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as StepsAPI from 'openai/resources/beta/threads/runs/steps';\nimport { CursorPage } from 'openai/pagination';\nexport class Steps extends APIResource {\n    /**\n     * Retrieves a run step.\n     */\n    retrieve(threadId, runId, stepId, options) {\n        return this._client.get(`/threads/${threadId}/runs/${runId}/steps/${stepId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(threadId, runId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, runId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/runs/${runId}/steps`, RunStepsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\nexport class RunStepsPage extends CursorPage {\n}\n(function (Steps) {\n    Steps.RunStepsPage = StepsAPI.RunStepsPage;\n})(Steps || (Steps = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport { AssistantStream } from 'openai/lib/AssistantStream';\nimport { sleep } from 'openai/core';\nimport * as RunsAPI from 'openai/resources/beta/threads/runs/runs';\nimport * as StepsAPI from 'openai/resources/beta/threads/runs/steps';\nimport { CursorPage } from 'openai/pagination';\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.steps = new StepsAPI.Steps(this._client);\n    }\n    create(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * Retrieves a run.\n     */\n    retrieve(threadId, runId, options) {\n        return this._client.get(`/threads/${threadId}/runs/${runId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a run.\n     */\n    update(threadId, runId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(threadId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/runs`, RunsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Cancels a run that is `in_progress`.\n     */\n    cancel(threadId, runId, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}/cancel`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * A helper to create a run an poll for a terminal state. More information on Run\n     * lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndPoll(threadId, body, options) {\n        const run = await this.create(threadId, body, options);\n        return await this.poll(threadId, run.id, options);\n    }\n    /**\n     * Create a Run stream\n     *\n     * @deprecated use `stream` instead\n     */\n    createAndStream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    /**\n     * A helper to poll a run status until it reaches a terminal state. More\n     * information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async poll(threadId, runId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const { data: run, response } = await this.retrieve(threadId, runId, {\n                ...options,\n                headers: { ...options?.headers, ...headers },\n            }).withResponse();\n            switch (run.status) {\n                //If we are in any sort of intermediate state we poll\n                case 'queued':\n                case 'in_progress':\n                case 'cancelling':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                //We return the run in any terminal state.\n                case 'requires_action':\n                case 'cancelled':\n                case 'completed':\n                case 'failed':\n                case 'expired':\n                    return run;\n            }\n        }\n    }\n    /**\n     * Create a Run stream\n     */\n    stream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    submitToolOutputs(threadId, runId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}/submit_tool_outputs`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to submit a tool output to a run and poll for a terminal run state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async submitToolOutputsAndPoll(threadId, runId, body, options) {\n        const run = await this.submitToolOutputs(threadId, runId, body, options);\n        return await this.poll(threadId, run.id, options);\n    }\n    /**\n     * Submit the tool outputs from a previous run and stream the run to a terminal\n     * state. More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    submitToolOutputsStream(threadId, runId, body, options) {\n        return AssistantStream.createToolAssistantStream(threadId, runId, this._client.beta.threads.runs, body, options);\n    }\n}\nexport class RunsPage extends CursorPage {\n}\n(function (Runs) {\n    Runs.RunsPage = RunsAPI.RunsPage;\n    Runs.Steps = StepsAPI.Steps;\n    Runs.RunStepsPage = StepsAPI.RunStepsPage;\n})(Runs || (Runs = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport { AssistantStream } from 'openai/lib/AssistantStream';\nimport * as MessagesAPI from 'openai/resources/beta/threads/messages/messages';\nimport * as RunsAPI from 'openai/resources/beta/threads/runs/runs';\nexport class Threads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    create(body = {}, options) {\n        if (isRequestOptions(body)) {\n            return this.create({}, body);\n        }\n        return this._client.post('/threads', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a thread.\n     */\n    retrieve(threadId, options) {\n        return this._client.get(`/threads/${threadId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a thread.\n     */\n    update(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a thread.\n     */\n    del(threadId, options) {\n        return this._client.delete(`/threads/${threadId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    createAndRun(body, options) {\n        return this._client.post('/threads/runs', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to create a thread, start a run and then poll for a terminal state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndRunPoll(body, options) {\n        const run = await this.createAndRun(body, options);\n        return await this.runs.poll(run.thread_id, run.id, options);\n    }\n    /**\n     * Create a thread and stream the run back\n     */\n    createAndRunStream(body, options) {\n        return AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n    }\n}\n(function (Threads) {\n    Threads.Runs = RunsAPI.Runs;\n    Threads.RunsPage = RunsAPI.RunsPage;\n    Threads.Messages = MessagesAPI.Messages;\n    Threads.MessagesPage = MessagesAPI.MessagesPage;\n})(Threads || (Threads = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport * as AssistantsAPI from 'openai/resources/beta/assistants/assistants';\nimport * as ChatAPI from 'openai/resources/beta/chat/chat';\nimport * as ThreadsAPI from 'openai/resources/beta/threads/threads';\nexport class Beta extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.chat = new ChatAPI.Chat(this._client);\n        this.assistants = new AssistantsAPI.Assistants(this._client);\n        this.threads = new ThreadsAPI.Threads(this._client);\n    }\n}\n(function (Beta) {\n    Beta.Chat = ChatAPI.Chat;\n    Beta.Assistants = AssistantsAPI.Assistants;\n    Beta.AssistantsPage = AssistantsAPI.AssistantsPage;\n    Beta.Threads = ThreadsAPI.Threads;\n})(Beta || (Beta = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n(function (Completions) {\n})(Completions || (Completions = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nexport class Embeddings extends APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     */\n    create(body, options) {\n        return this._client.post('/embeddings', { body, ...options });\n    }\n}\n(function (Embeddings) {\n})(Embeddings || (Embeddings = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport { sleep } from 'openai/core';\nimport { APIConnectionTimeoutError } from 'openai/error';\nimport * as FilesAPI from 'openai/resources/files';\nimport { multipartFormRequestOptions } from 'openai/core';\nimport { Page } from 'openai/pagination';\nexport class Files extends APIResource {\n    /**\n     * Upload a file that can be used across various endpoints. The size of all the\n     * files uploaded by one organization can be up to 100 GB.\n     *\n     * The size of individual files can be a maximum of 512 MB or 2 million tokens for\n     * Assistants. See the\n     * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) to\n     * learn more about the types of files supported. The Fine-tuning API only supports\n     * `.jsonl` files.\n     *\n     * Please [contact us](https://help.openai.com/) if you need to increase these\n     * storage limits.\n     */\n    create(body, options) {\n        return this._client.post('/files', multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Returns information about a specific file.\n     */\n    retrieve(fileId, options) {\n        return this._client.get(`/files/${fileId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/files', FileObjectsPage, { query, ...options });\n    }\n    /**\n     * Delete a file.\n     */\n    del(fileId, options) {\n        return this._client.delete(`/files/${fileId}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */\n    content(fileId, options) {\n        return this._client.get(`/files/${fileId}/content`, { ...options, __binaryResponse: true });\n    }\n    /**\n     * Returns the contents of the specified file.\n     *\n     * @deprecated The `.content()` method should be used instead\n     */\n    retrieveContent(fileId, options) {\n        return this._client.get(`/files/${fileId}/content`, {\n            ...options,\n            headers: { Accept: 'application/json', ...options?.headers },\n        });\n    }\n    /**\n     * Waits for the given file to be processed, default timeout is 30 mins.\n     */\n    async waitForProcessing(id, { pollInterval = 5000, maxWait = 30 * 60 * 1000 } = {}) {\n        const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n        const start = Date.now();\n        let file = await this.retrieve(id);\n        while (!file.status || !TERMINAL_STATES.has(file.status)) {\n            await sleep(pollInterval);\n            file = await this.retrieve(id);\n            if (Date.now() - start > maxWait) {\n                throw new APIConnectionTimeoutError({\n                    message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\n                });\n            }\n        }\n        return file;\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class FileObjectsPage extends Page {\n}\n(function (Files) {\n    Files.FileObjectsPage = FilesAPI.FileObjectsPage;\n})(Files || (Files = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as CheckpointsAPI from 'openai/resources/fine-tuning/jobs/checkpoints';\nimport { CursorPage } from 'openai/pagination';\nexport class Checkpoints extends APIResource {\n    list(fineTuningJobId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(fineTuningJobId, {}, query);\n        }\n        return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/checkpoints`, FineTuningJobCheckpointsPage, { query, ...options });\n    }\n}\nexport class FineTuningJobCheckpointsPage extends CursorPage {\n}\n(function (Checkpoints) {\n    Checkpoints.FineTuningJobCheckpointsPage = CheckpointsAPI.FineTuningJobCheckpointsPage;\n})(Checkpoints || (Checkpoints = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as JobsAPI from 'openai/resources/fine-tuning/jobs/jobs';\nimport * as CheckpointsAPI from 'openai/resources/fine-tuning/jobs/checkpoints';\nimport { CursorPage } from 'openai/pagination';\nexport class Jobs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n    }\n    /**\n     * Creates a fine-tuning job which begins the process of creating a new model from\n     * a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     */\n    create(body, options) {\n        return this._client.post('/fine_tuning/jobs', { body, ...options });\n    }\n    /**\n     * Get info about a fine-tuning job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     */\n    retrieve(fineTuningJobId, options) {\n        return this._client.get(`/fine_tuning/jobs/${fineTuningJobId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/fine_tuning/jobs', FineTuningJobsPage, { query, ...options });\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     */\n    cancel(fineTuningJobId, options) {\n        return this._client.post(`/fine_tuning/jobs/${fineTuningJobId}/cancel`, options);\n    }\n    listEvents(fineTuningJobId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.listEvents(fineTuningJobId, {}, query);\n        }\n        return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/events`, FineTuningJobEventsPage, {\n            query,\n            ...options,\n        });\n    }\n}\nexport class FineTuningJobsPage extends CursorPage {\n}\nexport class FineTuningJobEventsPage extends CursorPage {\n}\n(function (Jobs) {\n    Jobs.FineTuningJobsPage = JobsAPI.FineTuningJobsPage;\n    Jobs.FineTuningJobEventsPage = JobsAPI.FineTuningJobEventsPage;\n    Jobs.Checkpoints = CheckpointsAPI.Checkpoints;\n    Jobs.FineTuningJobCheckpointsPage = CheckpointsAPI.FineTuningJobCheckpointsPage;\n})(Jobs || (Jobs = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport * as JobsAPI from 'openai/resources/fine-tuning/jobs/jobs';\nexport class FineTuning extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.jobs = new JobsAPI.Jobs(this._client);\n    }\n}\n(function (FineTuning) {\n    FineTuning.Jobs = JobsAPI.Jobs;\n    FineTuning.FineTuningJobsPage = JobsAPI.FineTuningJobsPage;\n    FineTuning.FineTuningJobEventsPage = JobsAPI.FineTuningJobEventsPage;\n})(FineTuning || (FineTuning = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport { multipartFormRequestOptions } from 'openai/core';\nexport class Images extends APIResource {\n    /**\n     * Creates a variation of a given image.\n     */\n    createVariation(body, options) {\n        return this._client.post('/images/variations', multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Creates an edited or extended image given an original image and a prompt.\n     */\n    edit(body, options) {\n        return this._client.post('/images/edits', multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Creates an image given a prompt.\n     */\n    generate(body, options) {\n        return this._client.post('/images/generations', { body, ...options });\n    }\n}\n(function (Images) {\n})(Images || (Images = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nimport * as ModelsAPI from 'openai/resources/models';\nimport { Page } from 'openai/pagination';\nexport class Models extends APIResource {\n    /**\n     * Retrieves a model instance, providing basic information about the model such as\n     * the owner and permissioning.\n     */\n    retrieve(model, options) {\n        return this._client.get(`/models/${model}`, options);\n    }\n    /**\n     * Lists the currently available models, and provides basic information about each\n     * one such as the owner and availability.\n     */\n    list(options) {\n        return this._client.getAPIList('/models', ModelsPage, options);\n    }\n    /**\n     * Delete a fine-tuned model. You must have the Owner role in your organization to\n     * delete a model.\n     */\n    del(model, options) {\n        return this._client.delete(`/models/${model}`, options);\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class ModelsPage extends Page {\n}\n(function (Models) {\n    Models.ModelsPage = ModelsAPI.ModelsPage;\n})(Models || (Models = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from 'openai/resource';\nexport class Moderations extends APIResource {\n    /**\n     * Classifies if text is potentially harmful.\n     */\n    create(body, options) {\n        return this._client.post('/moderations', { body, ...options });\n    }\n}\n(function (Moderations) {\n})(Moderations || (Moderations = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _a;\nimport * as Core from \"./core.mjs\";\nimport * as Errors from \"./error.mjs\";\nimport * as Uploads from \"./uploads.mjs\";\nimport * as Pagination from 'openai/pagination';\nimport * as API from 'openai/resources/index';\n/** API Client for interfacing with the OpenAI API. */\nexport class OpenAI extends Core.APIClient {\n    /**\n     * API Client for interfacing with the OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = Core.readEnv('OPENAI_BASE_URL'), apiKey = Core.readEnv('OPENAI_API_KEY'), organization = Core.readEnv('OPENAI_ORG_ID') ?? null, project = Core.readEnv('OPENAI_PROJECT_ID') ?? null, ...opts } = {}) {\n        if (apiKey === undefined) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\");\n        }\n        const options = {\n            apiKey,\n            organization,\n            project,\n            ...opts,\n            baseURL: baseURL || `https://api.openai.com/v1`,\n        };\n        if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n            throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n        }\n        super({\n            baseURL: options.baseURL,\n            timeout: options.timeout ?? 600000 /* 10 minutes */,\n            httpAgent: options.httpAgent,\n            maxRetries: options.maxRetries,\n            fetch: options.fetch,\n        });\n        this.completions = new API.Completions(this);\n        this.chat = new API.Chat(this);\n        this.embeddings = new API.Embeddings(this);\n        this.files = new API.Files(this);\n        this.images = new API.Images(this);\n        this.audio = new API.Audio(this);\n        this.moderations = new API.Moderations(this);\n        this.models = new API.Models(this);\n        this.fineTuning = new API.FineTuning(this);\n        this.beta = new API.Beta(this);\n        this.batches = new API.Batches(this);\n        this._options = options;\n        this.apiKey = apiKey;\n        this.organization = organization;\n        this.project = project;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    defaultHeaders(opts) {\n        return {\n            ...super.defaultHeaders(opts),\n            'OpenAI-Organization': this.organization,\n            'OpenAI-Project': this.project,\n            ...this._options.defaultHeaders,\n        };\n    }\n    authHeaders(opts) {\n        return { Authorization: `Bearer ${this.apiKey}` };\n    }\n}\n_a = OpenAI;\nOpenAI.OpenAI = _a;\nOpenAI.OpenAIError = Errors.OpenAIError;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nexport const { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, NotFoundError, ConflictError, RateLimitError, BadRequestError, AuthenticationError, InternalServerError, PermissionDeniedError, UnprocessableEntityError, } = Errors;\nexport var toFile = Uploads.toFile;\nexport var fileFromPath = Uploads.fileFromPath;\n(function (OpenAI) {\n    // Helper functions\n    OpenAI.toFile = Uploads.toFile;\n    OpenAI.fileFromPath = Uploads.fileFromPath;\n    OpenAI.Page = Pagination.Page;\n    OpenAI.CursorPage = Pagination.CursorPage;\n    OpenAI.Completions = API.Completions;\n    OpenAI.Chat = API.Chat;\n    OpenAI.Embeddings = API.Embeddings;\n    OpenAI.Files = API.Files;\n    OpenAI.FileObjectsPage = API.FileObjectsPage;\n    OpenAI.Images = API.Images;\n    OpenAI.Audio = API.Audio;\n    OpenAI.Moderations = API.Moderations;\n    OpenAI.Models = API.Models;\n    OpenAI.ModelsPage = API.ModelsPage;\n    OpenAI.FineTuning = API.FineTuning;\n    OpenAI.Beta = API.Beta;\n    OpenAI.Batches = API.Batches;\n})(OpenAI || (OpenAI = {}));\nexport default OpenAI;\n"],
  "mappings": "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",
  "names": ["fetch", "Request", "Response", "Headers", "FormData", "Blob", "File", "ReadableStream", "iter", "ReadableStream", "str", "File", "FormData", "kind", "fetch", "opts", "Page", "retryMessage", "_a", "Completions", "Chat", "Speech", "Transcriptions", "Translations", "Audio", "Batches", "Files", "Assistants", "__classPrivateFieldSet", "kind", "__classPrivateFieldGet", "_a", "content", "_AbstractChatCompletionRunner_getFinalContent", "_AbstractChatCompletionRunner_getFinalMessage", "_AbstractChatCompletionRunner_getFinalFunctionCall", "_AbstractChatCompletionRunner_getFinalFunctionCallResult", "_AbstractChatCompletionRunner_calculateTotalUsage", "_AbstractChatCompletionRunner_validateParams", "_AbstractChatCompletionRunner_stringifyFunctionCallResult", "__classPrivateFieldGet", "kind", "__classPrivateFieldSet", "_ChatCompletionStream_beginRequest", "_ChatCompletionStream_addChunk", "_ChatCompletionStream_endRequest", "_ChatCompletionStream_accumulateChatCompletion", "_a", "_b", "content", "rest", "_c", "index", "chunk", "id", "Completions", "Chat", "Completions", "__classPrivateFieldSet", "kind", "__classPrivateFieldGet", "__classPrivateFieldGet", "kind", "__classPrivateFieldSet", "chunk", "_AssistantStream_addEvent", "_AssistantStream_endRequest", "_AssistantStream_handleMessage", "_AssistantStream_handleRunStep", "_AssistantStream_handleEvent", "_AssistantStream_accumulateRunStep", "_AssistantStream_accumulateMessage", "_AssistantStream_accumulateContent", "_AssistantStream_handleRun", "Files", "Files", "Messages", "Steps", "Runs", "Threads", "Chat", "Beta", "Completions", "Embeddings", "Files", "Checkpoints", "Jobs", "FineTuning", "Images", "Models", "Moderations", "_a", "Completions", "Files", "OpenAIError", "APIError", "APIConnectionError", "APIConnectionTimeoutError", "APIUserAbortError", "NotFoundError", "ConflictError", "RateLimitError", "BadRequestError", "AuthenticationError", "InternalServerError", "PermissionDeniedError", "UnprocessableEntityError", "toFile", "fileFromPath", "OpenAI"]
}
